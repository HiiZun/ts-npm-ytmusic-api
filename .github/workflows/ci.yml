name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Clean install dependencies
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --no-optional
        
    - name: Verify installation
      run: |
        npm ls --depth=0 || true
        npx eslint --version || echo "ESLint not found"
        npx prettier --version || echo "Prettier not found"
      
    - name: Run linting
      run: |
        echo "Running TypeScript check..."
        npm run lint:ts
        echo "Running ESLint..."
        npm run lint:eslint
        echo "Running Prettier..."
        npm run format
        
    - name: Build project
      run: |
        echo "Building project..."
        npm run build
        echo "Verifying build output..."
        ls -la dist/ || echo "No dist directory found"
        
    - name: Run tests
      run: |
        echo "Running tests..."
        npm test
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/
        retention-days: 30

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://npm.pkg.github.com'
        
    - name: Clean install dependencies
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --no-optional
        
    - name: Build project
      run: |
        echo "Building for production..."
        npm run build
        echo "Build completed, checking output..."
        ls -la dist/
        
    - name: Publish to GitHub Packages
      run: |
        echo "Publishing to GitHub Packages..."
        npm publish --access public
        echo "Package published successfully!"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
